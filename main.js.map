{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/book-create/book-create.component.ts","./src/app/book-create/book-create.component.html","./src/app/book-form/book-form.component.ts","./src/app/book-form/book-form.component.html","./src/app/book-list-item/book-list-item.component.ts","./src/app/book-list-item/book-list-item.component.html","./src/app/book-list/book-list.component.ts","./src/app/book-list/book-list.component.html","./src/app/book-update/book-update.component.ts","./src/app/book-update/book-update.component.html","./src/app/reading-list-database.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BookListComponent } from './book-list/book-list.component';\nimport { environment } from '../environments/environment';\nimport { BookCreateComponent } from './book-create/book-create.component';\nimport { BookUpdateComponent } from './book-update/book-update.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: {\n      toolbarTitle: environment.applicationDefaultTitle,\n      hideBackButton: true\n    },\n    component: BookListComponent\n  },\n  {\n    path: 'books',\n    children: [ \n      {\n\tpath: '',\n\tredirectTo: '/',\n\tpathMatch: 'full'\n      },\n      {\n\tpath: 'create',\n\tcomponent: BookCreateComponent\n      },\n      {\n\tpath: ':bookId',\n\tcomponent: BookUpdateComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Data, RoutesRecognized, Router} from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  routeData: BehaviorSubject<Data> = new BehaviorSubject({});\n\n  constructor(private router: Router, private location: Location) {\n    \n    // filter & listen for route data\n    this.router.events.subscribe((data) => {\n      if (data instanceof RoutesRecognized) {\n\tthis.routeData.next(data.state.root.firstChild.data as Data);\n      }\n    });\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  toolbarConfig(property: string, defaultValue: any = undefined): Observable<any> {\n    return this.routeData.pipe(map(d => d[property] === undefined ? defaultValue : d[property]));\n  }\n}\n","<mat-toolbar color=\"primary\" class=\"mat-elevation-z6\">\n  <button matTooltip=\"Back\" *ngIf=\"!(toolbarConfig('hideBackButton', false) | async)\" (click)=\"goBack()\" mat-icon-button>\n    <mat-icon>arrow_back</mat-icon>\n  </button>\n  <span *ngIf=\"toolbarConfig('toolbarTitle') | async\">{{ toolbarConfig(\"toolbarTitle\") | async }}</span>\n  <span class=\"toolbar-spacer\"></span> \n</mat-toolbar>\n\n<main class=\"reading-list\">\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon'; \nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSliderModule} from '@angular/material/slider';\n\nimport { BookListComponent } from './book-list/book-list.component';\nimport { BookListItemComponent } from './book-list-item/book-list-item.component';\n\nimport { ReadingListDatabaseService } from './reading-list-database.service';\nimport { BookCreateComponent } from './book-create/book-create.component';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { BookFormComponent } from './book-form/book-form.component';\nimport { BookUpdateComponent } from './book-update/book-update.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BookListComponent,\n    BookListItemComponent,\n    BookCreateComponent,\n    BookFormComponent,\n    BookUpdateComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatListModule,\n    MatMenuModule,\n    MatProgressBarModule,\n    MatTooltipModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatCheckboxModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatSliderModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [\n    ReadingListDatabaseService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (ds: ReadingListDatabaseService) => () => ds.initialize(),\n      deps: [ReadingListDatabaseService],\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild} from '@angular/core';\nimport {BookFormComponent} from '../book-form/book-form.component';\nimport {FormGroup} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {ReadingListDatabaseService} from '../reading-list-database.service';\n\n@Component({\n  selector: 'app-book-create',\n  templateUrl: './book-create.component.html',\n  styleUrls: ['./book-create.component.scss']\n})\nexport class BookCreateComponent implements OnInit {\n\n  @ViewChild('form') bookForm: BookFormComponent;\n\n  constructor(private snackBar: MatSnackBar, private readingListDB: ReadingListDatabaseService) {}\n\n  ngOnInit() {}\n\n  formSubmit(form: FormGroup) {\n    if (form.valid) {\n      \n      delete form.value['id'];\n\n      this.readingListDB.table('books').add(form.value).then((response) => {\n\t\n\tif (response) {\n\t  this.snackBar.open(\"Book has been added to the list\", null, { duration: 1000});\n\t  this.bookForm.stopSpinner();\n\t  this.bookForm.clear();\n\t} else {\n\t  this.snackBar.open(\"Unable to create the book.\", null, { duration: 1000});\n\t  this.bookForm.stopSpinner();\n\t}\n      });\n    } else {\n      this.snackBar.open(\"Beep Boop, Something wrong with the inputs\", null, { duration: 1000 });\n      this.bookForm.stopSpinner();\n    }\n  }\n}\n","<app-book-form #form formTitle=\"Add new book\" (onSubmit)=\"formSubmit($event)\"></app-book-form>\n","import { Component, OnInit, EventEmitter, Output, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {FormGroup, FormBuilder, Validators, AbstractControl} from '@angular/forms';\nimport {StoredBook} from '../reading-list-database.service';\nimport {MatSliderChange} from '@angular/material/slider';\n\n@Component({\n  selector: 'app-book-form',\n  templateUrl: './book-form.component.html',\n  styleUrls: ['./book-form.component.scss']\n})\nexport class BookFormComponent implements OnInit, OnChanges {\n\n  form: FormGroup;\n\n  @Input() formTitle: string;\n\n  @Input() book: StoredBook;\n\n  @Output() onSubmit: EventEmitter<any> = new EventEmitter();\n\n  spinnerRunning = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n  ) {\n    this.form = this.formBuilder.group({\n      id: [null, Validators.nullValidator],\n      title: [\"\", Validators.compose([Validators.required, Validators.maxLength(500)])],\n      authors: [\"\", Validators.compose([Validators.maxLength(256)])],\n      markedAsRead: [false],\n      pages: [null, [Validators.pattern('[0-9]*'), Validators.min(1)]],\n      currentPage: [null, Validators.compose([Validators.nullValidator, pagesEmpty, currentPageLEPages])]\n    });\n  } \n\n  get totalPages() {\n    return this.form.get('pages').value || 0;\n  }\n\n  get currentPage() {\n    return this.form.get('currentPage').value || 0;\n  }\n\n  get markedAsRead() {\n    return this.form.get('markedAsRead').value;\n  } \n\n  readerPositionsliderThumb(totalPages: number, usePercentages: any) {\n    return (page: number) => usePercentages.checked ? Math.round((page * 100) / totalPages) : page;\n  }\n\n  updateCurrentPage(sliderChange: MatSliderChange) {\n    this.form.patchValue({ markedAsRead: false, currentPage: sliderChange.value });\n  }\n\n  submit(form: FormGroup) {\n    this.startSpinner();\n    this.onSubmit.next(form); \n  } \n\n  clear() { \n    this.form.reset({});\n  }\n\n  setUpdateValues(value: any) {\n    this.form.setValue(value);\n  }\n\n  startSpinner() {\n    this.spinnerRunning = true;\n  }\n\n  stopSpinner() {\n    this.spinnerRunning = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const book = changes.book?.currentValue;\n\n    if (book) {\n      this.form.setValue(book);\n    }\n  }\n\n  ngOnInit(): void {\n\n    this.form.get('currentPage').valueChanges.subscribe((currentPage) => {\n      if (!isNaN(currentPage) && currentPage > 0 && this.totalPages == currentPage) {\n\tthis.form.patchValue({ markedAsRead: true });\n      }\n    });\n  }\n}\n\nfunction pagesEmpty(control: AbstractControl) {\n  const pages = control.parent?.get('pages');\n\n  if (!pages?.value && control.value) {\n    pages.setErrors({ required: true });\n  }\n\n  return null;\n}\n\nfunction currentPageLEPages(control: AbstractControl) {\n  const pages = control.parent?.get('pages');\n\n  if (control.value > pages?.value) {\n    return { 'currentPageLEPages': true };\n  }\n\n  return null;\n}\n","<div class=\"form-container mat-typography\" *ngIf=\"!spinnerRunning; else formSpinner\">\n  <h1 class=\"mat-headline\">{{ formTitle }}</h1>\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit(form)\">\n    \n    <div class=\"book-details\">\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Title</mat-label>\n      <input formControlName=\"title\" matInput>\n    </mat-form-field> \n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Authors</mat-label>\n      <input formControlName=\"authors\" matInput>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Pages</mat-label>\n      <input formControlName=\"pages\" matInput>\n      <mat-error>Pages should not be empty if current page has value.</mat-error>\n    </mat-form-field>\n    </div>\n    <div class=\"read-position\">\n      <h3>Read position</h3>\n\n      <div class=\"checkbox\">\n\t<mat-checkbox [disabled]=\"!totalPages\" [checked]=\"true\" #usePercentages>Use percentages to mark progress</mat-checkbox>\n      </div>\n      \n      <div class=\"progress-bar\">\n\t<mat-slider\n\t  [disabled]=\"!totalPages\"\n\t  [displayWith]=\"readerPositionsliderThumb(totalPages, usePercentages)\"\n\t  (change)=\"updateCurrentPage($event)\"\n\t  [max]=\"totalPages\"\n\t  thumbLabel\n\t  [value]=\"currentPage\">\n\t</mat-slider>\n      </div>\n\n      <mat-form-field appearance=\"fill\">\n\t<mat-label>Current page</mat-label>\n\t<input type=\"number\" [max]=\"totalPages\" formControlName=\"currentPage\" matInput>\n\t<mat-error>current page should not be greater than total pages available</mat-error>\n      </mat-form-field> \n    </div>\n    <button type=\"submit\" [disabled]=\"spinnerRunning\" mat-raised-button color=\"primary\">Submit</button>\n  </form>\n</div>\n\n<ng-template #formSpinner>\n  <div class=\"form-spinner\">\n    <mat-spinner></mat-spinner>\n  </div>\n</ng-template>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {StoredBook, ReadingListDatabaseService} from '../reading-list-database.service';\nimport {state, style, transition, animate, trigger} from '@angular/animations';\n\n@Component({\n  selector: 'app-book-list-item',\n  templateUrl: './book-list-item.component.html',\n  styleUrls: ['./book-list-item.component.scss'],\n  animations: [ \n    trigger('deletion', [\n      state('static', style({ opacity: 1 })),\n      state('deleted', style({ opacity: 0, display: 'none' })),\n      transition('static => deleted', [\n\tanimate('0.3s')\n      ])\n    ])\n  ],\n})\nexport class BookListItemComponent implements OnInit {\n  \n  // activates deletion animation trigger\n  deleted = false;\n\n  @Input() book: StoredBook;\n\n  @Output() bookEvents: EventEmitter<BookEvent> = new EventEmitter();\n\n  constructor(protected readingListDB: ReadingListDatabaseService) { }\n\n  get showProgress() {\n    return !this.book.markedAsRead && (this.book.pages) && this.book.currentPage > 0;\n  }\n\n  markedAsRead(markedAsRead: boolean) {\n    this.readingListDB.table('books')\n    .update(this.book.id, {markedAsRead})\n    .then((response) => {\n      \n      if (response) {\n\tthis.deleted = true;\n\tthis.bookEvents.emit({ type: 'markedAsRead', book: { ...this.book, markedAsRead } });\n      }\n    });\n  }\n\n  delete() {\n    this.readingListDB.table('books').delete(this.book.id).then(() => {\n      this.deleted = true;\n    });\n  }\n\n  get position() {\n    return Math.round(((this.book.currentPage || 0) * 100) / (this.book.pages || 0));\n  }\n\n  ngOnInit(): void {}\n\n}\n\nexport interface BookEvent {\n  type: 'markedAsRead' | 'delete' | 'update',\n  book: StoredBook\n}\n","<div [@deletion]=\"deleted ? 'deleted' : 'static'\">\n<mat-list-item role=\"listitem\">\n  <mat-icon mat-list-icon>book</mat-icon>\n  <div  mat-line>{{ book.title }}</div>\n  <div class=\"book-authors\" mat-line>{{ book.authors }}</div>\n  <div class=\"read-progress\" mat-line *ngIf=\"showProgress\">\n    <mat-progress-bar mode=\"determinate\" color=\"warn\" [value]=\"position\"></mat-progress-bar>\n    <span class=\"mat-small mat-warn\">{{ position }}%</span>\n  </div>\n  <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n    <mat-icon>more_vert</mat-icon>\n  </button>\n  <mat-menu #menu=\"matMenu\">\n    <button [routerLink]=\"['books', book.id]\"  mat-menu-item>Update</button>\n    <button (click)=\"markedAsRead(!book.markedAsRead)\" mat-menu-item>Mark as {{ book.markedAsRead ? 'un' : ''}}read</button>\n    <button (click)=\"delete()\" mat-menu-item>Delete</button>\n  </mat-menu>\n</mat-list-item>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ReadingListDatabaseService, StoredBook} from '../reading-list-database.service';\n\n@Component({\n  selector: 'app-book-list',\n  templateUrl: './book-list.component.html',\n  styleUrls: ['./book-list.component.scss']\n})\nexport class BookListComponent implements OnInit {\n\n  readBooks: StoredBook[] = [];\n\n  unreadBooks: StoredBook[] = [];\n\n  constructor(private readingListDB: ReadingListDatabaseService) {}\n\n  get listsAreEmpty() {\n    return this.readBooks.length === 0 && this.unreadBooks.length === 0;\n  } \n\n  bookEvents({ type, book }) {\n\n    if (type == 'markedAsRead') {\n      if (book.markedAsRead) {\n\tthis.readBooks.push(book);\n      } else {\n\tthis.unreadBooks.push(book);\n      }\n    }\n  } \n\n  ngOnInit(): void {\n    this.readingListDB.table('books')\n    .each((book: StoredBook) => {\n\n      if (book.markedAsRead) {\n\tthis.readBooks.push(book);\n      } else {\n\tthis.unreadBooks.push(book);\n      }\n    });\n  }\n\n}\n","<div class=\"book-list\">\n  <mat-list role=\"list\" *ngIf=\"!listsAreEmpty; else booksEmptyBanner\">\n    <div mat-subheader>Reading</div>\n    <app-book-list-item [book]=\"unreadbook\" *ngFor=\"let unreadbook of unreadBooks\" (bookEvents)=\"bookEvents($event)\"></app-book-list-item>  \n    <mat-divider></mat-divider>\n    <div mat-subheader>Read</div>\n    <app-book-list-item [book]=\"readbook\" *ngFor=\"let readbook of readBooks\" (bookEvents)=\"bookEvents($event)\"></app-book-list-item>  \n  </mat-list>\n  <button mat-fab color=\"primary\" class=\"app-fab\" matTooltip=\"Add new book\" routerLink=\"books/create\">\n    <mat-icon>add</mat-icon>\n  </button>\n</div>\n\n<ng-template #booksEmptyBanner></ng-template>\n","import { Component, OnInit, ViewChild} from '@angular/core';\nimport {BookFormComponent} from '../book-form/book-form.component';\nimport {FormGroup} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {ReadingListDatabaseService, StoredBook} from '../reading-list-database.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {map} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-book-update',\n  templateUrl: './book-update.component.html',\n  styleUrls: ['./book-update.component.scss']\n})\nexport class BookUpdateComponent implements OnInit {\n\n@ViewChild('form') bookForm: BookFormComponent;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private readingListDB: ReadingListDatabaseService) {}\n\n  ngOnInit() {\n    this.route.params\n    .pipe(map(params => parseInt(params.bookId)))\n    .subscribe((bookId: number) => {\n      this.readingListDB.table('books').get(bookId).then((book: StoredBook | undefined) => {\n\tif (book) {\n\t  this.bookForm.setUpdateValues(book);\n\t} else {\n\t  this.router.navigate(['']);\n\t}\n      });\n    });\n  }\n\n  formSubmit(form: FormGroup) {\n    if (form.valid) {\n      this.readingListDB.table('books').update(form.value.id, form.value).then((response) => {\n\n\tif (response) {\n\t  this.snackBar.open(\"Book has been updated\", null, { duration: 1000});\n\t  this.bookForm.stopSpinner();\n\t  this.router.navigate(['']);\n\t} else {\n\t  this.snackBar.open(\"Unable to update the book.\", null, { duration: 1000});\n\t  this.bookForm.stopSpinner();\n\t}\n      });\n    } else {\n      this.snackBar.open(\"Beep Boop, Something wrong with the inputs\", null, { duration: 1000 });\n      this.bookForm.stopSpinner();\n    }\n  }\n}\n","<app-book-form #form formTitle=\"Update book\" (onSubmit)=\"formSubmit($event)\"></app-book-form>\n","import { Injectable } from '@angular/core';\nimport Dexie, {Table} from 'dexie';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReadingListDatabaseService {\n\n  private db: Dexie = new Dexie('readingList');\n\n  constructor() { }\n\n  initialize() {\n    this.db.version(1).stores({ books: \"++id,title,authors,pages,markedAsRead,currentPage\"});\n  }\n\n  table(tableName: string): Table | null {\n    return this.db[tableName];\n  }\n}\n\n\nexport interface Book {\n  title: string,\n  authors: string,\n  pages: number | null,\n  markedAsRead: boolean,\n  usePercentages: boolean,\n  currentPage: number | null,\n}\n\nexport interface StoredBook extends Book {\n  id?: number\n}\n","export const environment = {\n  production: false,\n  applicationDefaultTitle: \"Reading List\"\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}